---
- hosts: compute
  become: yes
  gather_facts: yes

  tasks:

  - apt: "name={{ item }} state=latest"
    tags: [pip2, update, install]
    with_items:
    - python-pip
    - python3-pip

  - name: "update pip"
    tags: [ pip2, update, install ]
    pip: "executable=pip2 state=latest name=pip"

  - name: "additional pip2 packages"
    tags: [ pip2, update, install ]
    pip: executable=pip2
         state=latest
         umask=022
         name={{ item }}
    with_items:
    - theano
    - datasift
    - bokeh
    - twitter
    #- pygsl # broken
    - scikit-learn
    - statsmodels
    - clawpack
    - ctop
    - networkx
    - macs2
    - bayespy==0.3.6
    - pandasql
    - blaze
    - cvxpy
    - bqplot
    - pydataset
    - dask
    - distributed
    - xarray
    - toolz
    - cytoolz
    - pysal
    - ncpol2sdpa
    - hdbscan
    - pandas-profiling
    - wordcloud
    - cobra
    - gensim
    - vpython
    - tdigest
    - numpy-stl
    - npTDMS
    - nipype

  - name: "install git trac from github"
    tags: [ pip2, update, install ]
    pip: executable=pip2
         umask=022
         name="git+https://github.com/sagemath/git-trac-command.git"
         editable=false

  - name: "install JSAnimation from github"
    tags: [ pip2, update, install ]
    pip: executable=pip2
         umask=022
         name='git+https://github.com/jakevdp/JSAnimation.git'
         editable=false

  - name: "additional pip3 packages"
    tags: [ pip3, update, install ]
    pip: executable=pip3
         state=latest
         umask=022
         name={{ item }}
    with_items:
    - pip
    - twitter
    - sympy
    - bokeh
    - uncertainties
    - zope.interface
    - scikit-learn
    - datasift
    - holoviews
    - statsmodels
    - mygene
    - seaborn
    - biopython
    - bayespy
    - pandasql
    - blaze
    - cvxpy
    - bqplot
    - pydataset
    - theano
    - dask
    - distributed
    - xlwt
    - xarray
    - toolz
    - cytoolz
    - pysal
    - hdbscan
    - pandas-profiling
    - wordcloud
    - cobra
    #- ncpol2sdpa # should work, but strange 'UnicodeDecodeError: 'ascii' codec can't decode byte ...' on install
    - gensim
    - vpython
    - tdigest
    - numpy-stl
    - npTDMS
    - nipype

  - name: "numba in py2 and py3"
    # might change to llvm 3.8 later, etc.
    tags: [ pip2, pip3, install, update ]
    shell: |
        LLVM_CONFIG=/usr/lib/llvm-3.7/bin/llvm-config pip2 install llvmlite numba
        LLVM_CONFIG=/usr/lib/llvm-3.7/bin/llvm-config pip3 install llvmlite numba

  - name: "pymc3 in py2 and py3"
    tags: [ pip2, pip3, install, update ]
    shell: |
        pip2 install git+https://github.com/pymc-devs/pymc3
        pip3 install git+https://github.com/pymc-devs/pymc3

  - name: "no sysinfo in MOTD"
    lineinfile: dest=/etc/update-motd.d/50-landscape-sysinfo
                line="exit 0"
                insertafter="^#!/bin/*"
                create=yes
    tags: motd

  - name: "Install https://github.com/williamstein/python-inotify"
    shell: |
        cd /tmp
        rm -rf python-inotify
        git clone https://github.com/williamstein/python-inotify
        cd python-inotify
        python setup.py install
    tags: inotify

  - name: "IPython with notebook and octave+bash kernel / install from pip"
    tags: [ ipython, install, update ]
    pip: executable=pip2
         state=forcereinstall
         umask=022
         name={{ item }}
    with_items:
    - ipython
    - notebook
    - octave_kernel
    - bash_kernel
  - name: "fix permissions in all python2.7/dist-packages"
    tags: [ ipython, install, update ]
    shell: |
        cd /usr/local/lib/python2.7/dist-packages
        sudo chmod a+r -R .
        sudo find . -perm /u+x -execdir chmod a+x {} \;

  - name: "IPython3 in Python3"
    tags: [ ipython3, install, update ]
    pip: executable=pip3
         state=forcereinstall
         umask=022
         name={{ item }}
    with_items:
    - ipython
    - ipywidgets

    # only used for jupyter kernels
  - name: "Special script to run python2 systemwide from within Sage"
    tags: ["python2sage", "install"]
    copy: src=files/python2-ubuntu.sh
          dest=/usr/local/bin/python2-ubuntu
          owner=root group=root mode="u=rx,g=rx,o=rx"

  - name: "install pair-based-crypto library system-wide"
    tags: pairbasedcrypto
    ignore_errors: yes
    shell: |
        cd /tmp/
        umask 022
        wget https://crypto.stanford.edu/pbc/files/pbc-0.5.14.tar.gz
        tar xf pbc-0.5.14.tar.gz
        cd pbc-0.5.14
        ./configure --prefix=/usr
        sudo make install
        sudo rm -rf /tmp/pbc-0.5.14 /tmp/pbc-0.5.14.tar.gz

  - name: "install primesieve"
    tags: ["primesieve", "install"]
    ignore_errors: yes
    shell: |
        cd /tmp/
        wget http://dl.bintray.com/kimwalisch/primesieve/primesieve-5.4.1.tar.gz
        tar xf primesieve-5.4.1.tar.gz
        cd primesieve-5.4.1
        ./configure
        make -j 1
        sudo make install
        rm -rf /tmp/primesieve*

  # this installs into sage!
  #- name: "install gap3"
  #  tags: gap3
  #  shell: "umask 022 && cd /projects/sage && wget http://webusers.imj-prg.fr/~jean.michel/gap3/gap3-jm5.zip && unzip gap3-jm5.zip && rm gap3-jm5.zip && mv gap3-jm5 gap3 && cd gap3"

  #- name: "gap3 symlink"
  #  tags: gap3
  #  file: src=/projects/sage/gap3/bin/gap.sh
  #        dest=/usr/local/bin/gap3
  #        state=link

  # Plink (whole genome analysis, not the router!)
  - name: 'install plink'
    apt: name=plink install_recommends=yes
    tags: plink
  - name: 'symlink from p-link to plink'
    file: src=/usr/bin/p-link dest=/usr/bin/plink state=link
    tags: plink

  # Neovim from Github
  - name: "install neovim"
    tags: ["neovim", "install"]
    ignore_errors: yes
    shell: |
        cd /tmp
        rm -rf neovim
        unset MAKE
        git clone --depth=1 https://github.com/neovim/neovim
        cd neovim
        make
        umask 022
        sudo make install
        rm -rf /tmp/neovim

  # Macaulay2
  - name: "install macaulay2 / apt packages"
    tags: ["macaulay2", "install"]
    apt: "name={{ item }} install_recommends=yes state=latest"
    with_items:
    - libntl-dev
    - libntl5
    - libpari-gmp-tls4
    - libpari-dev
    - pari-gp2c
  - name: "macaulay2 / apt key"
    tags: macaulay2
    apt_key: "keyserver=hkp://keys.gnupg.net id=CD9C0E09B0C780943A1AD85553F8BD99F40DCB31"
  - name: "macaulay2 / deb sources"
    tags: macaulay2
    apt_repository: "mode=644 repo='deb http://www.math.uiuc.edu/Macaulay2/Repositories/Ubuntu {{ ansible_distribution_release }} main'"
  - name: "install macaulay2 / deb binaries"
    tags: macaulay2
    apt: "name=macaulay2 state=latest install_recommends=yes"

  # Polymake
  - name: "polymake apt package dependencies"
    tags: ["polymake", "install"]
    apt: "name={{ item }} state=latest install_recommends=yes"
    with_items:
    - ant
    - ant-optional
    - default-jdk
    - g++
    - libboost-dev
    - libgmp-dev
    - libgmpxx4ldbl
    - libmpfr-dev
    - libperl-dev
    - libsvn-perl
    - libterm-readline-gnu-perl
    - libxml-libxml-perl
    - libxml-libxslt-perl
    - libxml-perl
    - libxml-writer-perl
    - libxml2-dev
    - w3c-markup-validator
    - w3c-xsd-xslt
    - xsltproc
  - name: "polymake installation, from debian"
    apt: name=polymake state=latest install_recommends=yes

  # CRCMOD
  - name: "pip's crcmod -- critical for using google cloud storage #1"
    apt: name=crcmod state=absent
    tags: ["crcmod", "install"]
  - name: "pip's crcmod -- critical for using google cloud storage #2"
    tags: crcmod
    pip: executable=pip2
         state=forcereinstall
         umask=022
         name=crcmod

  # X11
  - name: "x11 setup"
    tags: x11
    lineinfile: dest=/etc/ssh/sshd_config
                insertafter=EOF
                line="X11UseLocalhost no"

# KWANT -- http://kwant-project.org/install
- hosts: compute
  become: yes
  gather_facts: no
  tags: ["kwant", "install"]

  tasks:

  - name: 'KWANT apt repository'
    apt_repository: mode=644 repo='ppa:kwant-project/ppa'

  - name: 'install KWANT'
    tags: update
    apt: "name={{ item }} install_recommends=yes state=latest"
    with_items:
    - python-kwant-doc
    - python3-kwant

# GIAC (the authentication key is broken, hence we allow unauthenticated packages)
- hosts: compute
  become: yes
  gather_facts: no
  ignore_errors: yes
  tags: ["giac", "install"]

  tasks:

  - name: 'GIAC apt key -- seems to be broken, though'
    apt_key: url='http://www-fourier.ujf-grenoble.fr/~parisse/xcas_public_key.gpg'

  - name: 'GIAC repository'
    apt_repository: mode=644 repo='deb http://www-fourier.ujf-grenoble.fr/~parisse/debian/ stable main'

  - name: 'install GIAC'
    apt: "name={{ item }} allow_unauthenticated=yes install_recommends=yes state=latest"
    tags: update
    with_items:
    - giac
    - python-giacpy

# FEniCS
# add-apt-repository ppa:fenics-packages/fenics && apt-get update && apt-get install fenics
- hosts: compute
  become: yes
  gather_facts: no
  tags: ["fenics", "install"]

  tasks:

  - name: 'FEniCS repository'
    apt_repository: mode=644 repo='ppa:fenics-packages/fenics'

  - name: 'install FEniCS'
    tags: update
    apt: name=fenics install_recommends=yes state=latest

# MPICH
- hosts: compute
  become: yes
  gather_facts: no
  tags: ["mpi", "install"]

  tasks:

  - name: 'install mpich'
    tags: update
    apt: "name={{ item }} install_recommends=yes state=latest"
    with_items:
    - mpich
    - mpich-doc
    - libmpich-dev

  - name: 'update-alternativs for mpich binary'
    alternatives: name=mpi path=/usr/include/mpich
  - name: correct MPI executor is mpich
    alternatives: name=mpirun path=/usr/bin/mpirun.mpich

# PYPY
- hosts: compute
  become: yes
  gather_facts: no
  tags: ["pypy", "install"]

  tasks:

  - name: 'pypy repository'
    apt_repository: mode=644 repo='ppa:pypy/ppa'

  - name: 'install pypy'
    tags: update
    apt: name=pypy install_recommends=yes state=latest

# Cantera
- hosts: compute
  become: yes
  gather_facts: no
  tags: ["cantera", "install"]

  tasks:

  - name: 'Cantera repository'
    apt_repository: mode=644 repo='ppa:speth/cantera'

  - name: 'install Cantera'
    tags: update
    apt: "name={{ item }} install_recommends=yes state=latest"
    with_items:
    - cantera-python
    - cantera-python3
    - cantera-dev

# Heroku, see https://toolbelt.heroku.com/debian and read the shellscript
- hosts: compute
  become: yes
  gather_facts: no
  tags: ["heroku", "install"]

  tasks:

  - name: 'heroku apt keys'
    apt_key: url='https://toolbelt.heroku.com/apt/release.key'
  - name: 'heroku apt-repository'
    apt_repository: mode=644 repo='deb http://toolbelt.heroku.com/ubuntu ./'
  - name: "heroku install"
    tags: update
    apt: name=heroku-toolbelt install_recommends=yes state=latest

# Obspy
- hosts: compute
  become: yes
  gather_facts: yes
  tags: ["obspy", "install"]

  tasks:
  - name: "obspy keys"
    apt_key: url='https://raw.github.com/obspy/obspy/master/misc/debian/public.key'
  - name: "obspy apt repository"
    apt_repository: mode=644 repo='deb http://deb.obspy.org {{ ansible_distribution_release }} main'
  - name: 'install obspy packages'
    tags: update
    apt: "name={{ item }} install_recommends=yes state=latest"
    with_items:
    - python-obspy
    - python3-obspy

# Atlas setup
- hosts: compute
  become: yes
  gather_facts: no
  tags: ["atlas", "install"]

  tasks:
  - name: 'install atlas'
    tags: update
    apt: "name={{ item }} install_recommends=yes state=latest"
    with_items:
    - libatlas3-base
    - liblapack-dev
  # file: src=/file/to/link/to dest=/path/to/symlink
  - name: 'configure atlas installation symlinks'
    file: src=/usr/lib/{{ item.src }} dest=/usr/lib/{{ item.dest }} state=link
    with_items:
    - { src: 'libatlas.so.3',   dest: 'libatlas.so' }
    - { src: 'libcblas.so.3',   dest: 'libcblas.so' }
    - { src: 'libf77blas.so.3', dest: 'libf77blas.so' }

# OpenAxiom
- hosts: compute
  become: yes
  gather_facts: yes
  tags: ["openaxiom", "install"]
  ignore_errors: yes

  tasks:
  - name: "pippijn ppa repository apt key -- https://launchpad.net/~pippijn/+archive/ubuntu/ppa"
    apt_key: keyserver=keyserver.ubuntu.com id=D2D8EDD2BA10D39D925BB7ED11CA9C2FE368B17C
  - name: "pippijn ppa for open axiom apt repository (for precise, since xenial does not exist)"
    apt_repository: mode=644 repo='deb http://ppa.launchpad.net/pippijn/ppa/ubuntu precise main'
  - name: "install open axiom"
    tags: update
    apt: name="open-axiom*"
         install_recommends=yes
         state=latest

# Octave
- hosts: compute
  become: yes
  gather_facts: no
  tags: ["octave", "install"]

  tasks:
  - name: "install ocatave"
    tags: update
    apt: "name={{ item }} install_recommends=yes state=latest"
    with_items:   # this is a **hand-picked** selection of octave packages so octave actually starts and our users are happy; doing "apt-get install octave*" results in broken octave.
    - octave
    - octave-biosig
    - octave-bim
    - octave-common
    - octave-communications
    - octave-communications-common
    - octave-control
    - octave-data-smoothing
    - octave-dataframe
    - octave-dbg
    - octave-doc
    - octave-econometrics
    - octave-epstk
    - octave-financial
    - octave-fpl
    - octave-ga
    - octave-gdf
    - octave-general
    - octave-geometry
    - octave-gsl
    - octave-htmldoc
    - octave-image
    - octave-info
    - octave-io
    - octave-lhapdf
    - octave-linear-algebra
    - octave-miscellaneous
    - octave-missing-functions
    - octave-mpi
    - octave-nan
    - octave-nlopt
    - octave-nurbs
    - octave-ocs
    - octave-octcdf
    - octave-odepkg
    - octave-optim
    - octave-optiminterp
    - octave-parallel
    - octave-pfstools
    - octave-pkg-dev
    - octave-psychtoolbox-3
    - octave-quaternion
    - octave-secs2d
    - octave-signal
    - octave-sockets
    - octave-specfun
    - octave-splines
    - octave-statistics
    - octave-strings
    - octave-struct
    - octave-sundials
    - octave-symbolic
    - octave-tsa
    - octave-vlfeat
    - octave-vrml
    - octave-zenity
    - libsbml5-octave
  - name: "fix some font for octave"
    file: src=/usr/share/fonts/truetype/liberation dest=/usr/share/fonts/truetype/ttf-liberation state=link
